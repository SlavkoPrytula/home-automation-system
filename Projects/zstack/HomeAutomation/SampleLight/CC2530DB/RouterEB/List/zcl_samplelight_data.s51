///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              20/Apr/2021  23:39:05
// Copyright 2004-2018 IAR Systems AB.
// Evaluation license - IAR Embedded Workbench for 8051, Evaluation edition 10.30
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\Source\zcl_samplelight_data.c
//    Command line       =  
//        -f C:\users\slavko\Temp\EWe56b.tmp ("C:\Texas Instruments\Z-Stack
//        3.0.2-20210417T211827Z-001\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\Source\zcl_samplelight_data.c"
//        -D BDB_REPORTING -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D
//        NV_RESTORE -D xZTOOL_P1 -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC
//        -D xMT_ZDO_FUNC -D xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D
//        LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
//        ZCL_DISCOVER -D ZCL_WRITE -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_ON_OFF
//        -D ZCL_SCENES -D ZCL_GROUPS -D ZCL_LEVEL_CTRL -D HAL_LED=TRUE -D
//        HAL_KEY=TRUE -D BLINK_LEDS -lC "C:\Texas Instruments\Z-Stack
//        3.0.2-20210417T211827Z-001\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\RouterEB\List"
//        -lA "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\RouterEB\List"
//        --diag_suppress Pe001,Pa010 -o "C:\Texas Instruments\Z-Stack
//        3.0.2-20210417T211827Z-001\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\RouterEB\Obj"
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f "C:\Texas
//        Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DRTR_NWK) -f "C:\Texas Instruments\Z-Stack
//        3.0.2-20210417T211827Z-001\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0}
//        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
//        -DENABLE_LED4_DISABLE_S1) -f "C:\Texas Instruments\Z-Stack
//        3.0.2-20210417T211827Z-001\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\" -I
//        "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\Source\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\Source\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\gp\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz --require_prototypes)
//    Locale             =  English_USA.1252
//    List file          =  
//        C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\RouterEB\List\zcl_samplelight_data.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME zcl_samplelight_data

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??zclSampleLight_ResetAttributesToDefaultValues
        FUNCTION ??zclSampleLight_ResetAttributesToDefaultValues,0203H
        PUBLIC zclCmdsArraySize
        PUBLIC zclSampleLight_Attrs
        PUBLIC zclSampleLight_Cmds
        PUBLIC zclSampleLight_DateCode
        PUBLIC zclSampleLight_DeviceEnable
        PUBLIC zclSampleLight_GroupsNameSupport
        PUBLIC zclSampleLight_HWRevision
        PUBLIC zclSampleLight_IdentifyTime
        PUBLIC zclSampleLight_InClusterList
        PUBLIC zclSampleLight_LevelCurrentLevel
        PUBLIC zclSampleLight_LevelDefaultMoveRate
        PUBLIC zclSampleLight_LevelOffTransitionTime
        PUBLIC zclSampleLight_LevelOnLevel
        PUBLIC zclSampleLight_LevelOnOffTransitionTime
        PUBLIC zclSampleLight_LevelOnTransitionTime
        PUBLIC zclSampleLight_LevelRemainingTime
        PUBLIC zclSampleLight_LocationDescription
        PUBLIC zclSampleLight_ManufacturerName
        PUBLIC zclSampleLight_ModelId
        PUBLIC zclSampleLight_NumAttributes
        PUBLIC zclSampleLight_OnOff
        PUBLIC zclSampleLight_PhysicalEnvironment
        PUBLIC zclSampleLight_PowerSource
        PUBLIC zclSampleLight_ResetAttributesToDefaultValues
        FUNCTION zclSampleLight_ResetAttributesToDefaultValues,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclSampleLight_SimpleDesc
        PUBLIC zclSampleLight_ZCLVersion
        PUBLIC zclSampleLight_clusterRevision_all
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
zclSampleLight_ResetAttributesToDefaultValues SYMBOL "zclSampleLight_ResetAttributesToDefaultValues"
??zclSampleLight_ResetAttributesToDefaultValues SYMBOL "?relay", zclSampleLight_ResetAttributesToDefaultValues

// C:\Texas Instruments\Z-Stack 3.0.2-20210417T211827Z-001\Z-Stack 3.0.2\Z-Stack 3.0.2\Projects\zstack\HomeAutomation\SampleLight\Source\zcl_samplelight_data.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_samplelight_data.c
//    3   Revised:        $Date: 2014-05-12 13:14:02 -0700 (Mon, 12 May 2014) $
//    4   Revision:       $Revision: 38502 $
//    5 
//    6 
//    7   Description:    Zigbee Cluster Library - sample device application.
//    8 
//    9 
//   10   Copyright 2006-2014 Texas Instruments Incorporated. All rights reserved.
//   11 
//   12   IMPORTANT: Your use of this Software is limited to those specific rights
//   13   granted under the terms of a software license agreement between the user
//   14   who downloaded the software, his/her employer (which must be your employer)
//   15   and Texas Instruments Incorporated (the "License").  You may not use this
//   16   Software unless you agree to abide by the terms of the License. The License
//   17   limits your use, and you acknowledge, that the Software may not be modified,
//   18   copied or distributed unless embedded on a Texas Instruments microcontroller
//   19   or used solely and exclusively in conjunction with a Texas Instruments radio
//   20   frequency transceiver, which is integrated into your product.  Other than for
//   21   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   22   works of, modify, distribute, perform, display or sell this Software and/or
//   23   its documentation for any purpose.
//   24 
//   25   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   26   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   27   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   28   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   29   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   30   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   31   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   32   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   33   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   34   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   35   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   36 
//   37   Should you have any questions regarding your right to use this Software,
//   38   contact Texas Instruments Incorporated at www.TI.com.
//   39 **************************************************************************************************/
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "ZComDef.h"
//   45 #include "OSAL.h"
//   46 #include "AF.h"
//   47 #include "ZDConfig.h"
//   48 
//   49 #include "zcl.h"
//   50 #include "zcl_general.h"
//   51 #include "zcl_ha.h"
//   52 #include "zcl_poll_control.h"
//   53 #include "zcl_electrical_measurement.h"
//   54 #include "zcl_diagnostic.h"
//   55 #include "zcl_meter_identification.h"
//   56 #include "zcl_appliance_identification.h"
//   57 #include "zcl_appliance_events_alerts.h"
//   58 #include "zcl_power_profile.h"
//   59 #include "zcl_appliance_control.h"
//   60 #include "zcl_appliance_statistics.h"
//   61 #include "zcl_hvac.h"
//   62 
//   63 #include "zcl_samplelight.h"
//   64 
//   65 /*********************************************************************
//   66  * CONSTANTS
//   67  */
//   68 
//   69 #define SAMPLELIGHT_DEVICE_VERSION     1
//   70 #define SAMPLELIGHT_FLAGS              0
//   71 
//   72 #define SAMPLELIGHT_HWVERSION          1
//   73 #define SAMPLELIGHT_ZCLVERSION         1
//   74 
//   75 #define DEFAULT_PHYSICAL_ENVIRONMENT 0
//   76 #define DEFAULT_DEVICE_ENABLE_STATE DEVICE_ENABLED
//   77 #define DEFAULT_IDENTIFY_TIME 0
//   78 #define DEFAULT_ON_OFF_TRANSITION_TIME 20
//   79 #define DEFAULT_ON_LEVEL ATTR_LEVEL_ON_LEVEL_NO_EFFECT
//   80 #define DEFAULT_ON_TRANSITION_TIME 20
//   81 #define DEFAULT_OFF_TRANSITION_TIME 20
//   82 #define DEFAULT_MOVE_RATE 0 // as fast as possible
//   83 
//   84 #define DEFAULT_ON_OFF_STATE LIGHT_OFF
//   85 #define DEFAULT_LEVEL ATTR_LEVEL_MAX_LEVEL
//   86 
//   87 /*********************************************************************
//   88  * TYPEDEFS
//   89  */
//   90 
//   91 /*********************************************************************
//   92  * MACROS
//   93  */
//   94 
//   95 /*********************************************************************
//   96  * GLOBAL VARIABLES
//   97  */
//   98  
//   99 //global attributes

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//  100 const uint16 zclSampleLight_clusterRevision_all = 0x0001; //currently all cluster implementations are according to ZCL6, which has revision #1. In the future it is possible that different clusters will have different revisions, so they will have to use separate attribute variables.
zclSampleLight_clusterRevision_all:
        DW 1
//  101 
//  102 // Basic Cluster

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  103 const uint8 zclSampleLight_HWRevision = SAMPLELIGHT_HWVERSION;
zclSampleLight_HWRevision:
        DB 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  104 const uint8 zclSampleLight_ZCLVersion = SAMPLELIGHT_ZCLVERSION;
zclSampleLight_ZCLVersion:
        DB 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  105 const uint8 zclSampleLight_ManufacturerName[] = { 16, 'T','e','x','a','s','I','n','s','t','r','u','m','e','n','t','s' };
zclSampleLight_ManufacturerName:
        DB 16
        DB 84
        DB 101
        DB 120
        DB 97
        DB 115
        DB 73
        DB 110
        DB 115
        DB 116
        DB 114
        DB 117
        DB 109
        DB 101
        DB 110
        DB 116
        DB 115

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  106 const uint8 zclSampleLight_ModelId[] = { 16, 'R','o','u','t','e','r','0','1',' ',' ',' ',' ',' ',' ',' ',' ' };
zclSampleLight_ModelId:
        DB 16
        DB 82
        DB 111
        DB 117
        DB 116
        DB 101
        DB 114
        DB 48
        DB 49
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  107 const uint8 zclSampleLight_DateCode[] = { 16, '2','0','2','2','0','4','2','0',' ',' ',' ',' ',' ',' ',' ',' ' };
zclSampleLight_DateCode:
        DB 16
        DB 50
        DB 48
        DB 50
        DB 50
        DB 48
        DB 52
        DB 50
        DB 48
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32
        DB 32

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  108 const uint8 zclSampleLight_PowerSource = POWER_SOURCE_MAINS_1_PHASE;
zclSampleLight_PowerSource:
        DB 1
//  109 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  110 uint8 zclSampleLight_LocationDescription[17];
zclSampleLight_LocationDescription:
        DS 17
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  111 uint8 zclSampleLight_PhysicalEnvironment;
zclSampleLight_PhysicalEnvironment:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  112 uint8 zclSampleLight_DeviceEnable;
zclSampleLight_DeviceEnable:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  113 
//  114 // Identify Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  115 uint16 zclSampleLight_IdentifyTime;
zclSampleLight_IdentifyTime:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  116 
//  117 // Groups Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  118 uint8 zclSampleLight_GroupsNameSupport = 0;
zclSampleLight_GroupsNameSupport:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  119 
//  120 // On/Off Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  121 uint8  zclSampleLight_OnOff;
zclSampleLight_OnOff:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  122 
//  123 // Level Control Cluster
//  124 #ifdef ZCL_LEVEL_CTRL

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  125 uint8  zclSampleLight_LevelCurrentLevel;
zclSampleLight_LevelCurrentLevel:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  126 uint16 zclSampleLight_LevelRemainingTime;
zclSampleLight_LevelRemainingTime:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  127 uint16 zclSampleLight_LevelOnOffTransitionTime;
zclSampleLight_LevelOnOffTransitionTime:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  128 uint8  zclSampleLight_LevelOnLevel;
zclSampleLight_LevelOnLevel:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  129 uint16 zclSampleLight_LevelOnTransitionTime;
zclSampleLight_LevelOnTransitionTime:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  130 uint16 zclSampleLight_LevelOffTransitionTime;
zclSampleLight_LevelOffTransitionTime:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  131 uint8  zclSampleLight_LevelDefaultMoveRate;
zclSampleLight_LevelDefaultMoveRate:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  132 #endif
//  133 
//  134 #if ZCL_DISCOVER

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  135 CONST zclCommandRec_t zclSampleLight_Cmds[] =
zclSampleLight_Cmds:
        DATA16
        DW 0
        DATA8
        DB 0
        DB 4
        DATA16
        DW 6
        DATA8
        DB 0
        DB 4
        DATA16
        DW 6
        DATA8
        DB 1
        DB 4
        DATA16
        DW 6
        DATA8
        DB 2
        DB 4
//  136 {
//  137   {
//  138     ZCL_CLUSTER_ID_GEN_BASIC,
//  139     COMMAND_BASIC_RESET_FACT_DEFAULT,
//  140     CMD_DIR_SERVER_RECEIVED
//  141   },
//  142   {
//  143     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  144     COMMAND_OFF,
//  145     CMD_DIR_SERVER_RECEIVED
//  146   },
//  147   {
//  148     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  149     COMMAND_ON,
//  150     CMD_DIR_SERVER_RECEIVED
//  151   },
//  152   {
//  153     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  154     COMMAND_TOGGLE,
//  155     CMD_DIR_SERVER_RECEIVED
//  156   },
//  157 #ifdef ZCL_LEVEL_CONTROL
//  158   ,{
//  159     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  160     COMMAND_LEVEL_MOVE_TO_LEVEL,
//  161     CMD_DIR_SERVER_RECEIVED
//  162   },
//  163   {
//  164     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  165     COMMAND_LEVEL_MOVE,
//  166     CMD_DIR_SERVER_RECEIVED
//  167   },
//  168   {
//  169     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  170     COMMAND_LEVEL_STEP,
//  171     CMD_DIR_SERVER_RECEIVED
//  172   },
//  173   {
//  174     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  175     COMMAND_LEVEL_STOP,
//  176     CMD_DIR_SERVER_RECEIVED
//  177   },
//  178   {
//  179     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  180     COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF,
//  181     CMD_DIR_SERVER_RECEIVED
//  182   },
//  183   {
//  184     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  185     COMMAND_LEVEL_MOVE_WITH_ON_OFF,
//  186     CMD_DIR_SERVER_RECEIVED
//  187   },
//  188   {
//  189     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  190     COMMAND_LEVEL_STEP_WITH_ON_OFF,
//  191     CMD_DIR_SERVER_RECEIVED
//  192   },
//  193   {
//  194     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  195     COMMAND_LEVEL_STOP_WITH_ON_OFF,
//  196     CMD_DIR_SERVER_RECEIVED
//  197   }
//  198 #endif // ZCL_LEVEL_CONTROL
//  199 };
//  200 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  201 CONST uint8 zclCmdsArraySize = ( sizeof(zclSampleLight_Cmds) / sizeof(zclSampleLight_Cmds[0]) );
zclCmdsArraySize:
        DB 4
//  202 #endif // ZCL_DISCOVER
//  203 
//  204 /*********************************************************************
//  205  * ATTRIBUTE DEFINITIONS - Uses REAL cluster IDs
//  206  */
//  207 
//  208 // NOTE: The attributes listed in the AttrRec must be in ascending order 
//  209 // per cluster to allow right function of the Foundation discovery commands
//  210  

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  211 CONST zclAttrRec_t zclSampleLight_Attrs[] =
zclSampleLight_Attrs:
        DATA16
        DW 0
        DW 0
        DATA8
        DB 32
        DB 1
        DATA16
        DW zclSampleLight_ZCLVersion
        DW 0
        DW 3
        DATA8
        DB 32
        DB 1
        DATA16
        DW zclSampleLight_HWRevision
        DW 0
        DW 4
        DATA8
        DB 66
        DB 1
        DATA16
        DW zclSampleLight_ManufacturerName
        DW 0
        DW 5
        DATA8
        DB 66
        DB 1
        DATA16
        DW zclSampleLight_ModelId
        DW 0
        DW 6
        DATA8
        DB 66
        DB 1
        DATA16
        DW zclSampleLight_DateCode
        DW 0
        DW 7
        DATA8
        DB 48
        DB 1
        DATA16
        DW zclSampleLight_PowerSource
        DW 0
        DW 16
        DATA8
        DB 66
        DB 3
        DATA16
        DW zclSampleLight_LocationDescription
        DW 0
        DW 17
        DATA8
        DB 48
        DB 3
        DATA16
        DW zclSampleLight_PhysicalEnvironment
        DW 0
        DW 18
        DATA8
        DB 16
        DB 3
        DATA16
        DW zclSampleLight_DeviceEnable
        DW 0
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 3
        DW 0
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_IdentifyTime
        DW 3
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 6
        DW 0
        DATA8
        DB 16
        DB 5
        DATA16
        DW zclSampleLight_OnOff
        DW 6
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 8
        DW 0
        DATA8
        DB 32
        DB 5
        DATA16
        DW zclSampleLight_LevelCurrentLevel
        DW 8
        DW 1
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_LevelRemainingTime
        DW 8
        DW 16
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_LevelOnOffTransitionTime
        DW 8
        DW 17
        DATA8
        DB 32
        DB 3
        DATA16
        DW zclSampleLight_LevelOnLevel
        DW 8
        DW 18
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_LevelOnTransitionTime
        DW 8
        DW 19
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_LevelOffTransitionTime
        DW 8
        DW 20
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_LevelDefaultMoveRate
        DW 8
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 4
        DW 0
        DATA8
        DB 24
        DB 1
        DATA16
        DW zclSampleLight_GroupsNameSupport
        DW 4
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 5
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
//  212 {
//  213   // *** General Basic Cluster Attributes ***
//  214   {
//  215     ZCL_CLUSTER_ID_GEN_BASIC,
//  216     { // Attribute record
//  217       ATTRID_BASIC_ZCL_VERSION,
//  218       ZCL_DATATYPE_UINT8,
//  219       ACCESS_CONTROL_READ,
//  220       (void *)&zclSampleLight_ZCLVersion
//  221     }
//  222   },
//  223   {
//  224     ZCL_CLUSTER_ID_GEN_BASIC,             // Cluster IDs - defined in the foundation (ie. zcl.h)
//  225     {  // Attribute record
//  226       ATTRID_BASIC_HW_VERSION,            // Attribute ID - Found in Cluster Library header (ie. zcl_general.h)
//  227       ZCL_DATATYPE_UINT8,                 // Data Type - found in zcl.h
//  228       ACCESS_CONTROL_READ,                // Variable access control - found in zcl.h
//  229       (void *)&zclSampleLight_HWRevision  // Pointer to attribute variable
//  230     }
//  231   },
//  232   {
//  233     ZCL_CLUSTER_ID_GEN_BASIC,
//  234     { // Attribute record
//  235       ATTRID_BASIC_MANUFACTURER_NAME,
//  236       ZCL_DATATYPE_CHAR_STR,
//  237       ACCESS_CONTROL_READ,
//  238       (void *)zclSampleLight_ManufacturerName
//  239     }
//  240   },
//  241   {
//  242     ZCL_CLUSTER_ID_GEN_BASIC,
//  243     { // Attribute record
//  244       ATTRID_BASIC_MODEL_ID,
//  245       ZCL_DATATYPE_CHAR_STR,
//  246       ACCESS_CONTROL_READ,
//  247       (void *)zclSampleLight_ModelId
//  248     }
//  249   },
//  250   {
//  251     ZCL_CLUSTER_ID_GEN_BASIC,
//  252     { // Attribute record
//  253       ATTRID_BASIC_DATE_CODE,
//  254       ZCL_DATATYPE_CHAR_STR,
//  255       ACCESS_CONTROL_READ,
//  256       (void *)zclSampleLight_DateCode
//  257     }
//  258   },
//  259   {
//  260     ZCL_CLUSTER_ID_GEN_BASIC,
//  261     { // Attribute record
//  262       ATTRID_BASIC_POWER_SOURCE,
//  263       ZCL_DATATYPE_ENUM8,
//  264       ACCESS_CONTROL_READ,
//  265       (void *)&zclSampleLight_PowerSource
//  266     }
//  267   },
//  268   {
//  269     ZCL_CLUSTER_ID_GEN_BASIC,
//  270     { // Attribute record
//  271       ATTRID_BASIC_LOCATION_DESC,
//  272       ZCL_DATATYPE_CHAR_STR,
//  273       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  274       (void *)zclSampleLight_LocationDescription
//  275     }
//  276   },
//  277   {
//  278     ZCL_CLUSTER_ID_GEN_BASIC,
//  279     { // Attribute record
//  280       ATTRID_BASIC_PHYSICAL_ENV,
//  281       ZCL_DATATYPE_ENUM8,
//  282       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  283       (void *)&zclSampleLight_PhysicalEnvironment
//  284     }
//  285   },
//  286   {
//  287     ZCL_CLUSTER_ID_GEN_BASIC,
//  288     { // Attribute record
//  289       ATTRID_BASIC_DEVICE_ENABLED,
//  290       ZCL_DATATYPE_BOOLEAN,
//  291       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  292       (void *)&zclSampleLight_DeviceEnable
//  293     }
//  294   },
//  295   {
//  296     ZCL_CLUSTER_ID_GEN_BASIC,
//  297     {  // Attribute record
//  298       ATTRID_CLUSTER_REVISION,
//  299       ZCL_DATATYPE_UINT16,
//  300       ACCESS_CONTROL_READ,
//  301       (void *)&zclSampleLight_clusterRevision_all
//  302     }
//  303   },
//  304 #ifdef ZCL_IDENTIFY
//  305   // *** Identify Cluster Attribute ***
//  306   {
//  307     ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  308     { // Attribute record
//  309       ATTRID_IDENTIFY_TIME,
//  310       ZCL_DATATYPE_UINT16,
//  311       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  312       (void *)&zclSampleLight_IdentifyTime
//  313     }
//  314   },
//  315   {
//  316     ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  317     {  // Attribute record
//  318       ATTRID_CLUSTER_REVISION,
//  319       ZCL_DATATYPE_UINT16,
//  320       ACCESS_CONTROL_READ,
//  321       (void *)&zclSampleLight_clusterRevision_all
//  322     }
//  323   },  
//  324 #endif
//  325 
//  326   // *** On/Off Cluster Attributes ***
//  327   {
//  328     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  329     { // Attribute record
//  330       ATTRID_ON_OFF,
//  331       ZCL_DATATYPE_BOOLEAN,
//  332       ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
//  333       (void *)&zclSampleLight_OnOff
//  334     }
//  335   },
//  336   {
//  337     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  338     {  // Attribute record
//  339       ATTRID_CLUSTER_REVISION,
//  340       ZCL_DATATYPE_UINT16,
//  341       ACCESS_CONTROL_READ,
//  342       (void *)&zclSampleLight_clusterRevision_all
//  343     }
//  344   },
//  345   
//  346 #ifdef ZCL_LEVEL_CTRL
//  347   {
//  348     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  349     { // Attribute record
//  350       ATTRID_LEVEL_CURRENT_LEVEL,
//  351       ZCL_DATATYPE_UINT8,
//  352       ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
//  353       (void *)&zclSampleLight_LevelCurrentLevel
//  354     }
//  355   },
//  356   {
//  357     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  358     { // Attribute record
//  359       ATTRID_LEVEL_REMAINING_TIME,
//  360       ZCL_DATATYPE_UINT16,
//  361       ACCESS_CONTROL_READ,
//  362       (void *)&zclSampleLight_LevelRemainingTime
//  363     }
//  364   },
//  365   {
//  366     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  367     { // Attribute record
//  368       ATTRID_LEVEL_ON_OFF_TRANSITION_TIME,
//  369       ZCL_DATATYPE_UINT16,
//  370       ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
//  371       (void *)&zclSampleLight_LevelOnOffTransitionTime
//  372     }
//  373   },
//  374   {
//  375     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  376     { // Attribute record
//  377       ATTRID_LEVEL_ON_LEVEL,
//  378       ZCL_DATATYPE_UINT8,
//  379       ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
//  380       (void *)&zclSampleLight_LevelOnLevel
//  381     }
//  382   },
//  383   {
//  384     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  385     { // Attribute record
//  386       ATTRID_LEVEL_ON_TRANSITION_TIME,
//  387       ZCL_DATATYPE_UINT16,
//  388       ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
//  389       (void *)&zclSampleLight_LevelOnTransitionTime
//  390     }
//  391   },
//  392   {
//  393     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  394     { // Attribute record
//  395       ATTRID_LEVEL_OFF_TRANSITION_TIME,
//  396       ZCL_DATATYPE_UINT16,
//  397       ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
//  398       (void *)&zclSampleLight_LevelOffTransitionTime
//  399     }
//  400   },
//  401   {
//  402     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  403     { // Attribute record
//  404       ATTRID_LEVEL_DEFAULT_MOVE_RATE,
//  405       ZCL_DATATYPE_UINT16,
//  406       ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
//  407       (void *)&zclSampleLight_LevelDefaultMoveRate
//  408     }
//  409   },
//  410   {
//  411     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  412     {  // Attribute record
//  413       ATTRID_CLUSTER_REVISION,
//  414       ZCL_DATATYPE_UINT16,
//  415       ACCESS_CONTROL_READ,
//  416       (void *)&zclSampleLight_clusterRevision_all
//  417     }
//  418   },
//  419 #endif
//  420 #ifdef ZCL_GROUPS
//  421   {
//  422     ZCL_CLUSTER_ID_GEN_GROUPS,
//  423     {
//  424       ATTRID_GROUP_NAME_SUPPORT,
//  425       ZCL_DATATYPE_BITMAP8,
//  426       ACCESS_CONTROL_READ,
//  427       (void*)&zclSampleLight_GroupsNameSupport
//  428     }
//  429   },
//  430 
//  431   {
//  432     ZCL_CLUSTER_ID_GEN_GROUPS,
//  433     {  // Attribute record
//  434       ATTRID_CLUSTER_REVISION,
//  435       ZCL_DATATYPE_UINT16,
//  436       ACCESS_CONTROL_READ,
//  437       (void *)&zclSampleLight_clusterRevision_all
//  438     }
//  439   },
//  440 #endif  
//  441   {
//  442     ZCL_CLUSTER_ID_GEN_SCENES,
//  443     {  // Attribute record
//  444       ATTRID_CLUSTER_REVISION,
//  445       ZCL_DATATYPE_UINT16,
//  446       ACCESS_CONTROL_READ,
//  447       (void *)&zclSampleLight_clusterRevision_all
//  448     }
//  449   },
//  450 
//  451 
//  452 #ifdef ZCL_DIAGNOSTIC
//  453   {
//  454     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  455     {  // Attribute record
//  456       ATTRID_DIAGNOSTIC_NUMBER_OF_RESETS,
//  457       ZCL_DATATYPE_UINT16,
//  458       ACCESS_CONTROL_READ,
//  459       NULL // Use application's callback to Read this attribute
//  460     }
//  461   },
//  462   {
//  463     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  464     {  // Attribute record
//  465       ATTRID_DIAGNOSTIC_PERSISTENT_MEMORY_WRITES,
//  466       ZCL_DATATYPE_UINT16,
//  467       ACCESS_CONTROL_READ,
//  468       NULL // Use application's callback to Read this attribute
//  469     }
//  470   },
//  471   {
//  472     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  473     {  // Attribute record
//  474       ATTRID_DIAGNOSTIC_MAC_RX_BCAST,
//  475       ZCL_DATATYPE_UINT32,
//  476       ACCESS_CONTROL_READ,
//  477       NULL // Use application's callback to Read this attribute
//  478     }
//  479   },
//  480   {
//  481     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  482     {  // Attribute record
//  483       ATTRID_DIAGNOSTIC_MAC_TX_BCAST,
//  484       ZCL_DATATYPE_UINT32,
//  485       ACCESS_CONTROL_READ,
//  486       NULL // Use application's callback to Read this attribute
//  487     }
//  488   },
//  489   {
//  490     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  491     {  // Attribute record
//  492       ATTRID_DIAGNOSTIC_MAC_RX_UCAST,
//  493       ZCL_DATATYPE_UINT32,
//  494       ACCESS_CONTROL_READ,
//  495       NULL // Use application's callback to Read this attribute
//  496     }
//  497   },
//  498   {
//  499     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  500     {  // Attribute record
//  501       ATTRID_DIAGNOSTIC_MAC_TX_UCAST,
//  502       ZCL_DATATYPE_UINT32,
//  503       ACCESS_CONTROL_READ,
//  504       NULL // Use application's callback to Read this attribute
//  505     }
//  506   },
//  507   {
//  508     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  509     {  // Attribute record
//  510       ATTRID_DIAGNOSTIC_MAC_TX_UCAST_RETRY,
//  511       ZCL_DATATYPE_UINT16,
//  512       ACCESS_CONTROL_READ,
//  513       NULL // Use application's callback to Read this attribute
//  514     }
//  515   },
//  516   {
//  517     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  518     {  // Attribute record
//  519       ATTRID_DIAGNOSTIC_MAC_TX_UCAST_FAIL,
//  520       ZCL_DATATYPE_UINT16,
//  521       ACCESS_CONTROL_READ,
//  522       NULL // Use application's callback to Read this attribute
//  523     }
//  524   },
//  525   {
//  526     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  527     {  // Attribute record
//  528       ATTRID_DIAGNOSTIC_APS_RX_BCAST,
//  529       ZCL_DATATYPE_UINT16,
//  530       ACCESS_CONTROL_READ,
//  531       NULL // Use application's callback to Read this attribute
//  532     }
//  533   },
//  534   {
//  535     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  536     {  // Attribute record
//  537       ATTRID_DIAGNOSTIC_APS_TX_BCAST,
//  538       ZCL_DATATYPE_UINT16,
//  539       ACCESS_CONTROL_READ,
//  540       NULL // Use application's callback to Read this attribute
//  541     }
//  542   },
//  543   {
//  544     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  545     {  // Attribute record
//  546       ATTRID_DIAGNOSTIC_APS_RX_UCAST,
//  547       ZCL_DATATYPE_UINT16,
//  548       ACCESS_CONTROL_READ,
//  549       NULL // Use application's callback to Read this attribute
//  550     }
//  551   },
//  552   {
//  553     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  554     {  // Attribute record
//  555       ATTRID_DIAGNOSTIC_APS_TX_UCAST_SUCCESS,
//  556       ZCL_DATATYPE_UINT16,
//  557       ACCESS_CONTROL_READ,
//  558       NULL // Use application's callback to Read this attribute
//  559     }
//  560   },
//  561   {
//  562     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  563     {  // Attribute record
//  564       ATTRID_DIAGNOSTIC_APS_TX_UCAST_RETRY,
//  565       ZCL_DATATYPE_UINT16,
//  566       ACCESS_CONTROL_READ,
//  567       NULL // Use application's callback to Read this attribute
//  568     }
//  569   },
//  570   {
//  571     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  572     {  // Attribute record
//  573       ATTRID_DIAGNOSTIC_APS_TX_UCAST_FAIL,
//  574       ZCL_DATATYPE_UINT16,
//  575       ACCESS_CONTROL_READ,
//  576       NULL // Use application's callback to Read this attribute
//  577     }
//  578   },
//  579   {
//  580     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  581     {  // Attribute record
//  582       ATTRID_DIAGNOSTIC_ROUTE_DISC_INITIATED,
//  583       ZCL_DATATYPE_UINT16,
//  584       ACCESS_CONTROL_READ,
//  585       NULL // Use application's callback to Read this attribute
//  586     }
//  587   },
//  588   {
//  589     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  590     {  // Attribute record
//  591       ATTRID_DIAGNOSTIC_NEIGHBOR_ADDED,
//  592       ZCL_DATATYPE_UINT16,
//  593       ACCESS_CONTROL_READ,
//  594       NULL // Use application's callback to Read this attribute
//  595     }
//  596   },
//  597   {
//  598     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  599     {  // Attribute record
//  600       ATTRID_DIAGNOSTIC_NEIGHBOR_REMOVED,
//  601       ZCL_DATATYPE_UINT16,
//  602       ACCESS_CONTROL_READ,
//  603       NULL // Use application's callback to Read this attribute
//  604     }
//  605   },
//  606   {
//  607     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  608     {  // Attribute record
//  609       ATTRID_DIAGNOSTIC_NEIGHBOR_STALE,
//  610       ZCL_DATATYPE_UINT16,
//  611       ACCESS_CONTROL_READ,
//  612       NULL // Use application's callback to Read this attribute
//  613     }
//  614   },
//  615   {
//  616     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  617     {  // Attribute record
//  618       ATTRID_DIAGNOSTIC_JOIN_INDICATION,
//  619       ZCL_DATATYPE_UINT16,
//  620       ACCESS_CONTROL_READ,
//  621       NULL // Use application's callback to Read this attribute
//  622     }
//  623   },
//  624   {
//  625     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  626     {  // Attribute record
//  627       ATTRID_DIAGNOSTIC_CHILD_MOVED,
//  628       ZCL_DATATYPE_UINT16,
//  629       ACCESS_CONTROL_READ,
//  630       NULL // Use application's callback to Read this attribute
//  631     }
//  632   },
//  633   {
//  634     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  635     {  // Attribute record
//  636       ATTRID_DIAGNOSTIC_NWK_FC_FAILURE,
//  637       ZCL_DATATYPE_UINT16,
//  638       ACCESS_CONTROL_READ,
//  639       NULL // Use application's callback to Read this attribute
//  640     }
//  641   },
//  642   {
//  643     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  644     {  // Attribute record
//  645       ATTRID_DIAGNOSTIC_APS_FC_FAILURE,
//  646       ZCL_DATATYPE_UINT16,
//  647       ACCESS_CONTROL_READ,
//  648       NULL // Use application's callback to Read this attribute
//  649     }
//  650   },
//  651   {
//  652     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  653     {  // Attribute record
//  654       ATTRID_DIAGNOSTIC_APS_UNAUTHORIZED_KEY,
//  655       ZCL_DATATYPE_UINT16,
//  656       ACCESS_CONTROL_READ,
//  657       NULL // Use application's callback to Read this attribute
//  658     }
//  659   },
//  660   {
//  661     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  662     {  // Attribute record
//  663       ATTRID_DIAGNOSTIC_NWK_DECRYPT_FAILURES,
//  664       ZCL_DATATYPE_UINT16,
//  665       ACCESS_CONTROL_READ,
//  666       NULL // Use application's callback to Read this attribute
//  667     }
//  668   },
//  669   {
//  670     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  671     {  // Attribute record
//  672       ATTRID_DIAGNOSTIC_APS_DECRYPT_FAILURES,
//  673       ZCL_DATATYPE_UINT16,
//  674       ACCESS_CONTROL_READ,
//  675       NULL // Use application's callback to Read this attribute
//  676     }
//  677   },
//  678   {
//  679     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  680     {  // Attribute record
//  681       ATTRID_DIAGNOSTIC_PACKET_BUFFER_ALLOCATE_FAILURES,
//  682       ZCL_DATATYPE_UINT16,
//  683       ACCESS_CONTROL_READ,
//  684       NULL // Use application's callback to Read this attribute
//  685     }
//  686   },
//  687   {
//  688     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  689     {  // Attribute record
//  690       ATTRID_DIAGNOSTIC_RELAYED_UCAST,
//  691       ZCL_DATATYPE_UINT16,
//  692       ACCESS_CONTROL_READ,
//  693       NULL // Use application's callback to Read this attribute
//  694     }
//  695   },
//  696   {
//  697     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  698     {  // Attribute record
//  699       ATTRID_DIAGNOSTIC_PHY_TO_MAC_QUEUE_LIMIT_REACHED,
//  700       ZCL_DATATYPE_UINT16,
//  701       ACCESS_CONTROL_READ,
//  702       NULL // Use application's callback to Read this attribute
//  703     }
//  704   },
//  705   {
//  706     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  707     {  // Attribute record
//  708       ATTRID_DIAGNOSTIC_PACKET_VALIDATE_DROP_COUNT,
//  709       ZCL_DATATYPE_UINT16,
//  710       ACCESS_CONTROL_READ,
//  711       NULL // Use application's callback to Read this attribute
//  712     }
//  713   },
//  714   {
//  715     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  716     {  // Attribute record
//  717       ATTRID_DIAGNOSTIC_AVERAGE_MAC_RETRY_PER_APS_MESSAGE_SENT,
//  718       ZCL_DATATYPE_UINT16,
//  719       ACCESS_CONTROL_READ,
//  720       NULL // Use application's callback to Read this attribute
//  721     }
//  722   },
//  723   {
//  724     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  725     {  // Attribute record
//  726       ATTRID_DIAGNOSTIC_LAST_MESSAGE_LQI,
//  727       ZCL_DATATYPE_UINT8,
//  728       ACCESS_CONTROL_READ,
//  729       NULL // Use application's callback to Read this attribute
//  730     }
//  731   },
//  732   {
//  733     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  734     {  // Attribute record
//  735       ATTRID_DIAGNOSTIC_LAST_MESSAGE_RSSI,
//  736       ZCL_DATATYPE_INT8,
//  737       ACCESS_CONTROL_READ,
//  738       NULL // Use application's callback to Read this attribute
//  739     }
//  740   },
//  741   {
//  742     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  743     {  // Attribute record
//  744       ATTRID_CLUSTER_REVISION,
//  745       ZCL_DATATYPE_UINT16,
//  746       ACCESS_CONTROL_READ,
//  747       (void *)&zclSampleLight_clusterRevision_all
//  748     }
//  749   },
//  750 #endif // ZCL_DIAGNOSTIC
//  751 
//  752 
//  753 
//  754 };
//  755 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  756 uint8 CONST zclSampleLight_NumAttributes = ( sizeof(zclSampleLight_Attrs) / sizeof(zclSampleLight_Attrs[0]) );
zclSampleLight_NumAttributes:
        DB 25
//  757 
//  758 /*********************************************************************
//  759  * SIMPLE DESCRIPTOR
//  760  */
//  761 // This is the Cluster ID List and should be filled with Application
//  762 // specific cluster IDs.

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  763 const cId_t zclSampleLight_InClusterList[] =
zclSampleLight_InClusterList:
        DATA16
        DW 0
        DW 3
        DW 4
        DW 5
        DW 6
        DW 8
//  764 {
//  765   ZCL_CLUSTER_ID_GEN_BASIC,
//  766   ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  767   ZCL_CLUSTER_ID_GEN_GROUPS,
//  768   ZCL_CLUSTER_ID_GEN_SCENES,
//  769   ZCL_CLUSTER_ID_GEN_ON_OFF
//  770 #ifdef ZCL_LEVEL_CTRL
//  771   , ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL
//  772 #endif
//  773 };
//  774 
//  775 #define ZCLSAMPLELIGHT_MAX_INCLUSTERS   (sizeof(zclSampleLight_InClusterList) / sizeof(zclSampleLight_InClusterList[0]))
//  776  

        RSEG XDATA_I:XDATA:NOROOT(0)
//  777 SimpleDescriptionFormat_t zclSampleLight_SimpleDesc =
zclSampleLight_SimpleDesc:
        DATA8
        DS 12
        REQUIRE `?<Initializer for zclSampleLight_SimpleDesc>`
        REQUIRE __INIT_XDATA_I
//  778 {
//  779   SAMPLELIGHT_ENDPOINT,                  //  int Endpoint;
//  780   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId;
//  781 #ifdef ZCL_LEVEL_CTRL
//  782   ZCL_HA_DEVICEID_DIMMABLE_LIGHT,        //  uint16 AppDeviceId;
//  783 #else
//  784   ZCL_HA_DEVICEID_ON_OFF_LIGHT,          //  uint16 AppDeviceId;
//  785 #endif
//  786   SAMPLELIGHT_DEVICE_VERSION,            //  int   AppDevVer:4;
//  787   SAMPLELIGHT_FLAGS,                     //  int   AppFlags:4;
//  788   ZCLSAMPLELIGHT_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
//  789   (cId_t *)zclSampleLight_InClusterList, //  byte *pAppInClusterList;
//  790   0,        //  byte  AppNumInClusters;
//  791   NULL //  byte *pAppInClusterList;
//  792 };
//  793 
//  794 // Added to include ZLL Target functionality 
//  795 #if defined ( BDB_TL_INITIATOR ) || defined ( BDB_TL_TARGET )
//  796 bdbTLDeviceInfo_t tlSampleLight_DeviceInfo =
//  797 {
//  798   SAMPLELIGHT_ENDPOINT,                  //uint8 endpoint;
//  799   ZCL_HA_PROFILE_ID,                        //uint16 profileID;
//  800 #ifdef ZCL_LEVEL_CTRL
//  801       ZCL_HA_DEVICEID_DIMMABLE_LIGHT,        //  uint16 AppDeviceId;
//  802 #else
//  803       ZCL_HA_DEVICEID_ON_OFF_LIGHT,          //  uint16 AppDeviceId;
//  804 #endif
//  805 
//  806   SAMPLELIGHT_DEVICE_VERSION,                    //uint8 version;
//  807   SAMPLELIGHT_NUM_GRPS                   //uint8 grpIdCnt;
//  808 };
//  809 #endif
//  810 /*********************************************************************
//  811  * GLOBAL FUNCTIONS
//  812  */
//  813 
//  814 /*********************************************************************
//  815  * LOCAL FUNCTIONS
//  816  */
//  817  
//  818 /*********************************************************************
//  819  * @fn      zclSampleLight_ResetAttributesToDefaultValues
//  820  *
//  821  * @brief   Reset all writable attributes to their default values.
//  822  *
//  823  * @param   none
//  824  *
//  825  * @return  none
//  826  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  827 void zclSampleLight_ResetAttributesToDefaultValues(void)
zclSampleLight_ResetAttributesToDefaultValues:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function zclSampleLight_ResetAttributesToDefaultValues
        CODE
//  828 {
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  829   int i;
//  830   
//  831   zclSampleLight_LocationDescription[0] = 16;
        MOV       DPTR,#zclSampleLight_LocationDescription
        MOV       A,#0x10
        MOVX      @DPTR,A
//  832   for (i = 1; i <= 16; i++)
//  833   {
//  834     zclSampleLight_LocationDescription[i] = ' ';
        MOV       A,#0x20
        INC       DPTR
        MOV       R0,#0x10
??zclSampleLight_ResetAttributesToDefaultValues_1:
        MOVX      @DPTR,A
        INC       DPTR
        DJNZ      R0,??zclSampleLight_ResetAttributesToDefaultValues_1
//  835   }
//  836   
//  837   zclSampleLight_PhysicalEnvironment = DEFAULT_PHYSICAL_ENVIRONMENT;
        MOV       DPTR,#zclSampleLight_PhysicalEnvironment
        CLR       A
        MOVX      @DPTR,A
//  838   zclSampleLight_DeviceEnable = DEFAULT_DEVICE_ENABLE_STATE;
        MOV       DPTR,#zclSampleLight_DeviceEnable
        INC       A
        MOVX      @DPTR,A
//  839   
//  840 #ifdef ZCL_IDENTIFY
//  841   zclSampleLight_IdentifyTime = DEFAULT_IDENTIFY_TIME;
        MOV       DPTR,#zclSampleLight_IdentifyTime
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  842 #endif
//  843 #ifdef ZCL_LEVEL_CTRL
//  844   zclSampleLight_LevelCurrentLevel = DEFAULT_LEVEL;
        MOV       DPTR,#zclSampleLight_LevelCurrentLevel
        MOV       A,#-0x2
        MOVX      @DPTR,A
//  845   zclSampleLight_LevelRemainingTime = 0;
        MOV       DPTR,#zclSampleLight_LevelRemainingTime
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  846   zclSampleLight_LevelOnOffTransitionTime = DEFAULT_ON_OFF_TRANSITION_TIME;
        MOV       DPTR,#zclSampleLight_LevelOnOffTransitionTime
        MOV       A,#0x14
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  847   zclSampleLight_LevelOnLevel = DEFAULT_ON_LEVEL;
        MOV       DPTR,#zclSampleLight_LevelOnLevel
        MOV       A,#-0x1
        MOVX      @DPTR,A
//  848   zclSampleLight_LevelOnTransitionTime = DEFAULT_ON_TRANSITION_TIME;
        MOV       DPTR,#zclSampleLight_LevelOnTransitionTime
        MOV       A,#0x14
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  849   zclSampleLight_LevelOffTransitionTime = DEFAULT_OFF_TRANSITION_TIME;
        MOV       DPTR,#zclSampleLight_LevelOffTransitionTime
        MOV       A,#0x14
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  850   zclSampleLight_LevelDefaultMoveRate = DEFAULT_MOVE_RATE;
        MOV       DPTR,#zclSampleLight_LevelDefaultMoveRate
        MOVX      @DPTR,A
//  851 #endif
//  852   zclSampleLight_OnOff = DEFAULT_ON_OFF_STATE;
        MOV       DPTR,#zclSampleLight_OnOff
        MOVX      @DPTR,A
//  853   
//  854   zclSampleLight_IdentifyTime = 0;
//  855 }
        POP       DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP       DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP      ?BRET
          CFI EndBlock cfiBlock0

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zclSampleLight_SimpleDesc>`:
        DATA8
        DB 8
        DATA16
        DW 260
        DW 257
        DATA8
        DB 1
        DB 6
        DATA16
        DW zclSampleLight_InClusterList
        DATA8
        DB 0
        DATA16
        DW 0H

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclSampleLight_ResetAttributesToDefaultValues:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclSampleLight_ResetAttributesToDefaultValues

        END
//  856 
//  857 /****************************************************************************
//  858 ****************************************************************************/
// 
//  97 bytes in segment BANKED_CODE
//   6 bytes in segment BANK_RELAYS
// 218 bytes in segment CODE_C
//  12 bytes in segment XDATA_I
//  12 bytes in segment XDATA_ID
//  68 bytes in segment XDATA_ROM_C
//  34 bytes in segment XDATA_Z
// 
// 236 bytes of CODE     memory
//  68 bytes of CONST    memory
//  97 bytes of HUGECODE memory
//  46 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
