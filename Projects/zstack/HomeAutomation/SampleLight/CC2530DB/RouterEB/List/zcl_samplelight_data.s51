///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              05/May/2021  18:21:36
// Copyright 2004-2018 IAR Systems AB.
// Evaluation license - IAR Embedded Workbench for 8051, Evaluation edition 10.40
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\Source\zcl_samplelight_data.c
//    Command line       =  
//        -f C:\users\slavko\Temp\EW460d.tmp ("C:\Texas Instruments\2. main
//        recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\Source\zcl_samplelight_data.c"
//        -D BDB_REPORTING -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D
//        NV_RESTORE -D xZTOOL_P1 -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC
//        -D xMT_ZDO_FUNC -D xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D
//        LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
//        ZCL_DISCOVER -D ZCL_WRITE -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_ON_OFF
//        -D ZCL_SCENES -D ZCL_GROUPS -D ZCL_LEVEL_CTRL -D HAL_LED=TRUE -D
//        HAL_KEY=TRUE -D BLINK_LEDS -lC "C:\Texas Instruments\2. main
//        recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\RouterEB\List"
//        -lA "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\RouterEB\List"
//        --diag_suppress Pe001,Pa010 -o "C:\Texas Instruments\2. main
//        recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\RouterEB\Obj"
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f "C:\Texas
//        Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DRTR_NWK) -f "C:\Texas Instruments\2. main recover\Z-Stack
//        3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0}
//        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
//        -DENABLE_LED4_DISABLE_S1) -f "C:\Texas Instruments\2. main
//        recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\" -I
//        "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\Source\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\Source\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\gp\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz --require_prototypes)
//    Locale             =  English_USA.1252
//    List file          =  
//        C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack
//        3.0.2\Projects\zstack\HomeAutomation\SampleLight\CC2530DB\RouterEB\List\zcl_samplelight_data.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME zcl_samplelight_data

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??zclSampleLight_ResetAttributesToDefaultValues
        FUNCTION ??zclSampleLight_ResetAttributesToDefaultValues,0203H
        PUBLIC zclCmdsArraySize
        PUBLIC zclSampleLight_Attrs
        PUBLIC zclSampleLight_Cmds
        PUBLIC zclSampleLight_DateCode
        PUBLIC zclSampleLight_DeviceEnable
        PUBLIC zclSampleLight_GroupsNameSupport
        PUBLIC zclSampleLight_HWRevision
        PUBLIC zclSampleLight_IdentifyTime
        PUBLIC zclSampleLight_InClusterList
        PUBLIC zclSampleLight_LevelCurrentLevel
        PUBLIC zclSampleLight_LevelDefaultMoveRate
        PUBLIC zclSampleLight_LevelOffTransitionTime
        PUBLIC zclSampleLight_LevelOnLevel
        PUBLIC zclSampleLight_LevelOnOffTransitionTime
        PUBLIC zclSampleLight_LevelOnTransitionTime
        PUBLIC zclSampleLight_LevelRemainingTime
        PUBLIC zclSampleLight_LocationDescription
        PUBLIC zclSampleLight_ManufacturerName
        PUBLIC zclSampleLight_MaxMeasuredValue
        PUBLIC zclSampleLight_MinMeasuredValue
        PUBLIC zclSampleLight_ModelId
        PUBLIC zclSampleLight_NumAttributes
        PUBLIC zclSampleLight_OnOff
        PUBLIC zclSampleLight_PhysicalEnvironment
        PUBLIC zclSampleLight_PowerSource
        PUBLIC zclSampleLight_ResetAttributesToDefaultValues
        FUNCTION zclSampleLight_ResetAttributesToDefaultValues,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC zclSampleLight_SimpleDesc
        PUBLIC zclSampleLight_ZCLVersion
        PUBLIC zclSampleLight_clusterRevision_all
        PUBLIC zclSampleLight_temp
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
zclSampleLight_ResetAttributesToDefaultValues SYMBOL "zclSampleLight_ResetAttributesToDefaultValues"
??zclSampleLight_ResetAttributesToDefaultValues SYMBOL "?relay", zclSampleLight_ResetAttributesToDefaultValues

        EXTERN zclSampleLight_MeasuredValue
        EXTERN zclSampleLight_on

// C:\Texas Instruments\2. main recover\Z-Stack 3.0.2\Z-Stack 3.0.2\Projects\zstack\HomeAutomation\SampleLight\Source\zcl_samplelight_data.c
//    1 /**************************************************************************************************
//    2   Filename:       zcl_samplelight_data.c
//    3   Revised:        $Date: 2014-05-12 13:14:02 -0700 (Mon, 12 May 2014) $
//    4   Revision:       $Revision: 38502 $
//    5 
//    6 
//    7   Description:    Zigbee Cluster Library - sample device application.
//    8 
//    9 
//   10   Copyright 2006-2014 Texas Instruments Incorporated. All rights reserved.
//   11 
//   12   IMPORTANT: Your use of this Software is limited to those specific rights
//   13   granted under the terms of a software license agreement between the user
//   14   who downloaded the software, his/her employer (which must be your employer)
//   15   and Texas Instruments Incorporated (the "License").  You may not use this
//   16   Software unless you agree to abide by the terms of the License. The License
//   17   limits your use, and you acknowledge, that the Software may not be modified,
//   18   copied or distributed unless embedded on a Texas Instruments microcontroller
//   19   or used solely and exclusively in conjunction with a Texas Instruments radio
//   20   frequency transceiver, which is integrated into your product.  Other than for
//   21   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   22   works of, modify, distribute, perform, display or sell this Software and/or
//   23   its documentation for any purpose.
//   24 
//   25   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   26   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   27   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   28   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   29   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   30   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   31   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   32   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   33   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   34   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   35   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   36 
//   37   Should you have any questions regarding your right to use this Software,
//   38   contact Texas Instruments Incorporated at www.TI.com.
//   39 **************************************************************************************************/
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 #include "ZComDef.h"
//   45 #include "OSAL.h"
//   46 #include "AF.h"
//   47 #include "ZDConfig.h"
//   48 
//   49 #include "zcl.h"
//   50 #include "zcl_ms.h"
//   51 #include "zcl_general.h"
//   52 #include "zcl_ha.h"
//   53 #include "zcl_poll_control.h"
//   54 #include "zcl_electrical_measurement.h"
//   55 #include "zcl_diagnostic.h"
//   56 #include "zcl_meter_identification.h"
//   57 #include "zcl_appliance_identification.h"
//   58 #include "zcl_appliance_events_alerts.h"
//   59 #include "zcl_power_profile.h"
//   60 #include "zcl_appliance_control.h"
//   61 #include "zcl_appliance_statistics.h"
//   62 #include "zcl_hvac.h"
//   63 
//   64 #include "zcl_samplelight.h"
//   65 
//   66 /*********************************************************************
//   67  * CONSTANTS
//   68  */
//   69 
//   70 #define SAMPLELIGHT_DEVICE_VERSION     1
//   71 #define SAMPLELIGHT_FLAGS              0
//   72 
//   73 #define SAMPLELIGHT_HWVERSION          1
//   74 #define SAMPLELIGHT_ZCLVERSION         1
//   75 
//   76 #define DEFAULT_PHYSICAL_ENVIRONMENT 0
//   77 #define DEFAULT_DEVICE_ENABLE_STATE DEVICE_ENABLED
//   78 #define DEFAULT_IDENTIFY_TIME 0
//   79 #define DEFAULT_ON_OFF_TRANSITION_TIME 20
//   80 #define DEFAULT_ON_LEVEL ATTR_LEVEL_ON_LEVEL_NO_EFFECT
//   81 #define DEFAULT_ON_TRANSITION_TIME 20
//   82 #define DEFAULT_OFF_TRANSITION_TIME 20
//   83 #define DEFAULT_MOVE_RATE 0 // as fast as possible
//   84 
//   85 #define DEFAULT_ON_OFF_STATE LIGHT_OFF
//   86 #define DEFAULT_LEVEL ATTR_LEVEL_MAX_LEVEL
//   87 
//   88 
//   89 /*********************************************************************
//   90  * TYPEDEFS
//   91  */
//   92 
//   93 /*********************************************************************
//   94  * MACROS
//   95  */
//   96 
//   97 /*********************************************************************
//   98  * GLOBAL VARIABLES
//   99  */
//  100  
//  101 //global attributes

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//  102 const uint16 zclSampleLight_clusterRevision_all = 0x0001; //currently all cluster implementations are according to ZCL6, which has revision #1. In the future it is possible that different clusters will have different revisions, so they will have to use separate attribute variables.
zclSampleLight_clusterRevision_all:
        DW 1
//  103 
//  104 // Basic Cluster

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  105 const uint8 zclSampleLight_HWRevision = SAMPLELIGHT_HWVERSION;
zclSampleLight_HWRevision:
        DB 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  106 const uint8 zclSampleLight_ZCLVersion = SAMPLELIGHT_ZCLVERSION;
zclSampleLight_ZCLVersion:
        DB 1

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  107 const uint8 zclSampleLight_ManufacturerName[] = { 10, 'S','i','m','p','l','e','L','i','n','k' };
zclSampleLight_ManufacturerName:
        DB 10
        DB 83
        DB 105
        DB 109
        DB 112
        DB 108
        DB 101
        DB 76
        DB 105
        DB 110
        DB 107

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  108 const uint8 zclSampleLight_ModelId[] = { 8, 'R','o','u','t','e','r','0','1' };
zclSampleLight_ModelId:
        DB 8
        DB 82
        DB 111
        DB 117
        DB 116
        DB 101
        DB 114
        DB 48
        DB 49

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  109 const uint8 zclSampleLight_DateCode[] = { 8, '2','0','2','2','0','4','2','0' };
zclSampleLight_DateCode:
        DB 8
        DB 50
        DB 48
        DB 50
        DB 50
        DB 48
        DB 52
        DB 50
        DB 48

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  110 const uint8 zclSampleLight_PowerSource = POWER_SOURCE_MAINS_1_PHASE;
zclSampleLight_PowerSource:
        DB 1
//  111 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  112 uint8 zclSampleLight_LocationDescription[17];
zclSampleLight_LocationDescription:
        DS 17
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  113 uint8 zclSampleLight_PhysicalEnvironment;
zclSampleLight_PhysicalEnvironment:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  114 uint8 zclSampleLight_DeviceEnable;
zclSampleLight_DeviceEnable:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  115 
//  116 // Identify Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  117 uint16 zclSampleLight_IdentifyTime;
zclSampleLight_IdentifyTime:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  118 
//  119 // Groups Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  120 uint8 zclSampleLight_GroupsNameSupport = 0;
zclSampleLight_GroupsNameSupport:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  121 
//  122 // On/Off Cluster

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  123 uint8  zclSampleLight_OnOff;
zclSampleLight_OnOff:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  124 
//  125 // Level Control Cluster
//  126 #ifdef ZCL_LEVEL_CTRL

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  127 uint8  zclSampleLight_LevelCurrentLevel;
zclSampleLight_LevelCurrentLevel:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  128 uint16 zclSampleLight_LevelRemainingTime;
zclSampleLight_LevelRemainingTime:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  129 uint16 zclSampleLight_LevelOnOffTransitionTime;
zclSampleLight_LevelOnOffTransitionTime:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  130 uint8  zclSampleLight_LevelOnLevel;
zclSampleLight_LevelOnLevel:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  131 uint16 zclSampleLight_LevelOnTransitionTime;
zclSampleLight_LevelOnTransitionTime:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  132 uint16 zclSampleLight_LevelOffTransitionTime;
zclSampleLight_LevelOffTransitionTime:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  133 uint8  zclSampleLight_LevelDefaultMoveRate;
zclSampleLight_LevelDefaultMoveRate:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  134 #endif
//  135 
//  136 
//  137 // temperature 
//  138 #define MAX_MEASURED_VALUE  10000  // 100.00C
//  139 #define MIN_MEASURED_VALUE  -10000  // -100.00C
//  140 
//  141 
//  142 extern uint16 zclSampleLight_MeasuredValue;

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//  143 const uint16 zclSampleLight_temp = 22; 
zclSampleLight_temp:
        DW 22
//  144 extern uint8 zclSampleLight_on; 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//  145 const int16 zclSampleLight_MinMeasuredValue = MIN_MEASURED_VALUE; 
zclSampleLight_MinMeasuredValue:
        DW -10000

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//  146 const uint16 zclSampleLight_MaxMeasuredValue = MAX_MEASURED_VALUE;
zclSampleLight_MaxMeasuredValue:
        DW 10000
//  147 
//  148 
//  149 #if ZCL_DISCOVER

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  150 CONST zclCommandRec_t zclSampleLight_Cmds[] =
zclSampleLight_Cmds:
        DATA16
        DW 0
        DATA8
        DB 0
        DB 4
        DATA16
        DW 6
        DATA8
        DB 0
        DB 4
        DATA16
        DW 6
        DATA8
        DB 1
        DB 4
        DATA16
        DW 6
        DATA8
        DB 2
        DB 4
//  151 {
//  152   {
//  153     ZCL_CLUSTER_ID_GEN_BASIC,
//  154     COMMAND_BASIC_RESET_FACT_DEFAULT,
//  155     CMD_DIR_SERVER_RECEIVED
//  156   },
//  157   {
//  158     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  159     COMMAND_OFF,
//  160     CMD_DIR_SERVER_RECEIVED
//  161   },
//  162   {
//  163     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  164     COMMAND_ON,
//  165     CMD_DIR_SERVER_RECEIVED
//  166   },
//  167   {
//  168     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  169     COMMAND_TOGGLE,
//  170     CMD_DIR_SERVER_RECEIVED
//  171   },
//  172 #ifdef ZCL_LEVEL_CONTROL
//  173   ,{
//  174     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  175     COMMAND_LEVEL_MOVE_TO_LEVEL,
//  176     CMD_DIR_SERVER_RECEIVED
//  177   },
//  178   {
//  179     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  180     COMMAND_LEVEL_MOVE,
//  181     CMD_DIR_SERVER_RECEIVED
//  182   },
//  183   {
//  184     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  185     COMMAND_LEVEL_STEP,
//  186     CMD_DIR_SERVER_RECEIVED
//  187   },
//  188   {
//  189     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  190     COMMAND_LEVEL_STOP,
//  191     CMD_DIR_SERVER_RECEIVED
//  192   },
//  193   {
//  194     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  195     COMMAND_LEVEL_MOVE_TO_LEVEL_WITH_ON_OFF,
//  196     CMD_DIR_SERVER_RECEIVED
//  197   },
//  198   {
//  199     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  200     COMMAND_LEVEL_MOVE_WITH_ON_OFF,
//  201     CMD_DIR_SERVER_RECEIVED
//  202   },
//  203   {
//  204     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  205     COMMAND_LEVEL_STEP_WITH_ON_OFF,
//  206     CMD_DIR_SERVER_RECEIVED
//  207   },
//  208   {
//  209     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  210     COMMAND_LEVEL_STOP_WITH_ON_OFF,
//  211     CMD_DIR_SERVER_RECEIVED
//  212   }
//  213 #endif // ZCL_LEVEL_CONTROL
//  214 };
//  215 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  216 CONST uint8 zclCmdsArraySize = ( sizeof(zclSampleLight_Cmds) / sizeof(zclSampleLight_Cmds[0]) );
zclCmdsArraySize:
        DB 4
//  217 #endif // ZCL_DISCOVER
//  218 
//  219 /*********************************************************************
//  220  * ATTRIBUTE DEFINITIONS - Uses REAL cluster IDs
//  221  */
//  222 
//  223 // NOTE: The attributes listed in the AttrRec must be in ascending order 
//  224 // per cluster to allow right function of the Foundation discovery commands
//  225  

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  226 CONST zclAttrRec_t zclSampleLight_Attrs[] =
zclSampleLight_Attrs:
        DATA16
        DW 0
        DW 0
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_MeasuredValue
        DW 0
        DW 3
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_on
        DW 0
        DW 4
        DATA8
        DB 66
        DB 1
        DATA16
        DW zclSampleLight_ManufacturerName
        DW 0
        DW 5
        DATA8
        DB 66
        DB 1
        DATA16
        DW zclSampleLight_ModelId
        DW 0
        DW 6
        DATA8
        DB 66
        DB 1
        DATA16
        DW zclSampleLight_DateCode
        DW 0
        DW 7
        DATA8
        DB 48
        DB 1
        DATA16
        DW zclSampleLight_PowerSource
        DW 0
        DW 16
        DATA8
        DB 66
        DB 3
        DATA16
        DW zclSampleLight_LocationDescription
        DW 0
        DW 17
        DATA8
        DB 48
        DB 3
        DATA16
        DW zclSampleLight_PhysicalEnvironment
        DW 0
        DW 18
        DATA8
        DB 16
        DB 3
        DATA16
        DW zclSampleLight_on
        DW 0
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 3
        DW 0
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_IdentifyTime
        DW 3
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 6
        DW 0
        DATA8
        DB 16
        DB 5
        DATA16
        DW zclSampleLight_OnOff
        DW 6
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 1026
        DW 0
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_temp
        DW 1026
        DW 1
        DATA8
        DB 41
        DB 1
        DATA16
        DW zclSampleLight_MinMeasuredValue
        DW 1026
        DW 2
        DATA8
        DB 41
        DB 5
        DATA16
        DW zclSampleLight_MaxMeasuredValue
        DW 1026
        DW 65533
        DATA8
        DB 33
        DB 5
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 8
        DW 0
        DATA8
        DB 32
        DB 5
        DATA16
        DW zclSampleLight_LevelCurrentLevel
        DW 8
        DW 1
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_LevelRemainingTime
        DW 8
        DW 16
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_LevelOnOffTransitionTime
        DW 8
        DW 17
        DATA8
        DB 32
        DB 3
        DATA16
        DW zclSampleLight_LevelOnLevel
        DW 8
        DW 18
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_LevelOnTransitionTime
        DW 8
        DW 19
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_LevelOffTransitionTime
        DW 8
        DW 20
        DATA8
        DB 33
        DB 3
        DATA16
        DW zclSampleLight_LevelDefaultMoveRate
        DW 8
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 4
        DW 0
        DATA8
        DB 24
        DB 1
        DATA16
        DW zclSampleLight_GroupsNameSupport
        DW 4
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
        DW 5
        DW 65533
        DATA8
        DB 33
        DB 1
        DATA16
        DW zclSampleLight_clusterRevision_all
//  227 {
//  228   // *** General Basic Cluster Attributes ***
//  229   {
//  230     ZCL_CLUSTER_ID_GEN_BASIC,
//  231     { // Attribute record
//  232       ATTRID_BASIC_ZCL_VERSION,
//  233       ZCL_DATATYPE_UINT16,
//  234       ACCESS_CONTROL_READ,
//  235       (void *)&zclSampleLight_MeasuredValue
//  236     }
//  237   },
//  238   {
//  239     ZCL_CLUSTER_ID_GEN_BASIC,             // Cluster IDs - defined in the foundation (ie. zcl.h)
//  240     {  // Attribute record
//  241       ATTRID_BASIC_HW_VERSION,            // Attribute ID - Found in Cluster Library header (ie. zcl_general.h)
//  242       ZCL_DATATYPE_UINT16,                 // Data Type - found in zcl.h
//  243       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),                // Variable access control - found in zcl.h
//  244       (void *)&zclSampleLight_on  // Pointer to attribute variable
//  245     }
//  246   },
//  247   {
//  248     ZCL_CLUSTER_ID_GEN_BASIC,
//  249     { // Attribute record
//  250       ATTRID_BASIC_MANUFACTURER_NAME,
//  251       ZCL_DATATYPE_CHAR_STR,
//  252       ACCESS_CONTROL_READ,
//  253       (void *)zclSampleLight_ManufacturerName
//  254     }
//  255   },
//  256   {
//  257     ZCL_CLUSTER_ID_GEN_BASIC,
//  258     { // Attribute record
//  259       ATTRID_BASIC_MODEL_ID,
//  260       ZCL_DATATYPE_CHAR_STR,
//  261       ACCESS_CONTROL_READ,
//  262       (void *)zclSampleLight_ModelId
//  263     }
//  264   },
//  265   {
//  266     ZCL_CLUSTER_ID_GEN_BASIC,
//  267     { // Attribute record
//  268       ATTRID_BASIC_DATE_CODE,
//  269       ZCL_DATATYPE_CHAR_STR,
//  270       ACCESS_CONTROL_READ,
//  271       (void *)zclSampleLight_DateCode
//  272     }
//  273   },
//  274   {
//  275     ZCL_CLUSTER_ID_GEN_BASIC,
//  276     { // Attribute record
//  277       ATTRID_BASIC_POWER_SOURCE,
//  278       ZCL_DATATYPE_ENUM8,
//  279       ACCESS_CONTROL_READ,
//  280       (void *)&zclSampleLight_PowerSource
//  281     }
//  282   },
//  283   {
//  284     ZCL_CLUSTER_ID_GEN_BASIC,
//  285     { // Attribute record
//  286       ATTRID_BASIC_LOCATION_DESC,
//  287       ZCL_DATATYPE_CHAR_STR,
//  288       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  289       (void *)zclSampleLight_LocationDescription
//  290     }
//  291   },
//  292   {
//  293     ZCL_CLUSTER_ID_GEN_BASIC,
//  294     { // Attribute record
//  295       ATTRID_BASIC_PHYSICAL_ENV,
//  296       ZCL_DATATYPE_ENUM8,
//  297       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  298       (void *)&zclSampleLight_PhysicalEnvironment
//  299     }
//  300   },
//  301   {
//  302     ZCL_CLUSTER_ID_GEN_BASIC,
//  303     { // Attribute record
//  304       ATTRID_BASIC_DEVICE_ENABLED,
//  305       ZCL_DATATYPE_BOOLEAN,
//  306       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  307       (void *)&zclSampleLight_on
//  308     }
//  309   },
//  310   {
//  311     ZCL_CLUSTER_ID_GEN_BASIC,
//  312     {  // Attribute record
//  313       ATTRID_CLUSTER_REVISION,
//  314       ZCL_DATATYPE_UINT16,
//  315       ACCESS_CONTROL_READ,
//  316       (void *)&zclSampleLight_clusterRevision_all
//  317     }
//  318   },
//  319 #ifdef ZCL_IDENTIFY
//  320   // *** Identify Cluster Attribute ***
//  321   {
//  322     ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  323     { // Attribute record
//  324       ATTRID_IDENTIFY_TIME,
//  325       ZCL_DATATYPE_UINT16,
//  326       (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
//  327       (void *)&zclSampleLight_IdentifyTime
//  328     }
//  329   },
//  330   {
//  331     ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  332     {  // Attribute record
//  333       ATTRID_CLUSTER_REVISION,
//  334       ZCL_DATATYPE_UINT16,
//  335       ACCESS_CONTROL_READ,
//  336       (void *)&zclSampleLight_clusterRevision_all
//  337     }
//  338   },  
//  339 #endif
//  340 
//  341   // *** On/Off Cluster Attributes ***
//  342   {
//  343     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  344     { // Attribute record
//  345       ATTRID_ON_OFF,
//  346       ZCL_DATATYPE_BOOLEAN,
//  347       ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
//  348       (void *)&zclSampleLight_OnOff
//  349     }
//  350   },
//  351   {
//  352     ZCL_CLUSTER_ID_GEN_ON_OFF,
//  353     {  // Attribute record
//  354       ATTRID_CLUSTER_REVISION,
//  355       ZCL_DATATYPE_UINT16,
//  356       ACCESS_CONTROL_READ,
//  357       (void *)&zclSampleLight_clusterRevision_all
//  358     }
//  359   },
//  360   
//  361   
//  362   
//  363   
//  364   
//  365   
//  366   
//  367   // *** Temperature Measurement  ***
//  368   {
//  369     ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
//  370     { // temperature value
//  371       ATTRID_MS_TEMPERATURE_MEASURED_VALUE,
//  372       ZCL_DATATYPE_UINT16,
//  373       ACCESS_CONTROL_READ,
//  374       (void *)&zclSampleLight_temp
//  375     }
//  376   },
//  377   
//  378   {
//  379     ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
//  380     { // min temperature
//  381       ATTRID_MS_TEMPERATURE_MIN_MEASURED_VALUE,
//  382       ZCL_DATATYPE_INT16,
//  383       ACCESS_CONTROL_READ,
//  384       (void *)&zclSampleLight_MinMeasuredValue
//  385     }
//  386   },
//  387   {
//  388     ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
//  389     { // max tempeerature
//  390       ATTRID_MS_TEMPERATURE_MAX_MEASURED_VALUE,
//  391       ZCL_DATATYPE_INT16,
//  392       ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
//  393       (void *)&zclSampleLight_MaxMeasuredValue
//  394     }
//  395   },
//  396   {
//  397     ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT,
//  398     {  // cluster version
//  399       ATTRID_CLUSTER_REVISION,
//  400       ZCL_DATATYPE_UINT16,
//  401       ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
//  402       (void *)&zclSampleLight_clusterRevision_all
//  403     }
//  404   },
//  405   
//  406   
//  407   
//  408   
//  409   
//  410   
//  411   
//  412   
//  413   
//  414   
//  415 #ifdef ZCL_LEVEL_CTRL
//  416   {
//  417     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  418     { // Attribute record
//  419       ATTRID_LEVEL_CURRENT_LEVEL,
//  420       ZCL_DATATYPE_UINT8,
//  421       ACCESS_CONTROL_READ | ACCESS_REPORTABLE,
//  422       (void *)&zclSampleLight_LevelCurrentLevel
//  423     }
//  424   },
//  425   {
//  426     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  427     { // Attribute record
//  428       ATTRID_LEVEL_REMAINING_TIME,
//  429       ZCL_DATATYPE_UINT16,
//  430       ACCESS_CONTROL_READ,
//  431       (void *)&zclSampleLight_LevelRemainingTime
//  432     }
//  433   },
//  434   {
//  435     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  436     { // Attribute record
//  437       ATTRID_LEVEL_ON_OFF_TRANSITION_TIME,
//  438       ZCL_DATATYPE_UINT16,
//  439       ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
//  440       (void *)&zclSampleLight_LevelOnOffTransitionTime
//  441     }
//  442   },
//  443   {
//  444     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  445     { // Attribute record
//  446       ATTRID_LEVEL_ON_LEVEL,
//  447       ZCL_DATATYPE_UINT8,
//  448       ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
//  449       (void *)&zclSampleLight_LevelOnLevel
//  450     }
//  451   },
//  452   {
//  453     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  454     { // Attribute record
//  455       ATTRID_LEVEL_ON_TRANSITION_TIME,
//  456       ZCL_DATATYPE_UINT16,
//  457       ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
//  458       (void *)&zclSampleLight_LevelOnTransitionTime
//  459     }
//  460   },
//  461   {
//  462     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  463     { // Attribute record
//  464       ATTRID_LEVEL_OFF_TRANSITION_TIME,
//  465       ZCL_DATATYPE_UINT16,
//  466       ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
//  467       (void *)&zclSampleLight_LevelOffTransitionTime
//  468     }
//  469   },
//  470   {
//  471     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  472     { // Attribute record
//  473       ATTRID_LEVEL_DEFAULT_MOVE_RATE,
//  474       ZCL_DATATYPE_UINT16,
//  475       ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE,
//  476       (void *)&zclSampleLight_LevelDefaultMoveRate
//  477     }
//  478   },
//  479   {
//  480     ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL,
//  481     {  // Attribute record
//  482       ATTRID_CLUSTER_REVISION,
//  483       ZCL_DATATYPE_UINT16,
//  484       ACCESS_CONTROL_READ,
//  485       (void *)&zclSampleLight_clusterRevision_all
//  486     }
//  487   },
//  488 #endif
//  489 #ifdef ZCL_GROUPS
//  490   {
//  491     ZCL_CLUSTER_ID_GEN_GROUPS,
//  492     {
//  493       ATTRID_GROUP_NAME_SUPPORT,
//  494       ZCL_DATATYPE_BITMAP8,
//  495       ACCESS_CONTROL_READ,
//  496       (void*)&zclSampleLight_GroupsNameSupport
//  497     }
//  498   },
//  499 
//  500   {
//  501     ZCL_CLUSTER_ID_GEN_GROUPS,
//  502     {  // Attribute record
//  503       ATTRID_CLUSTER_REVISION,
//  504       ZCL_DATATYPE_UINT16,
//  505       ACCESS_CONTROL_READ,
//  506       (void *)&zclSampleLight_clusterRevision_all
//  507     }
//  508   },
//  509 #endif  
//  510   {
//  511     ZCL_CLUSTER_ID_GEN_SCENES,
//  512     {  // Attribute record
//  513       ATTRID_CLUSTER_REVISION,
//  514       ZCL_DATATYPE_UINT16,
//  515       ACCESS_CONTROL_READ,
//  516       (void *)&zclSampleLight_clusterRevision_all
//  517     }
//  518   },
//  519 
//  520 
//  521 #ifdef ZCL_DIAGNOSTIC
//  522   {
//  523     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  524     {  // Attribute record
//  525       ATTRID_DIAGNOSTIC_NUMBER_OF_RESETS,
//  526       ZCL_DATATYPE_UINT16,
//  527       ACCESS_CONTROL_READ,
//  528       NULL // Use application's callback to Read this attribute
//  529     }
//  530   },
//  531   {
//  532     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  533     {  // Attribute record
//  534       ATTRID_DIAGNOSTIC_PERSISTENT_MEMORY_WRITES,
//  535       ZCL_DATATYPE_UINT16,
//  536       ACCESS_CONTROL_READ,
//  537       NULL // Use application's callback to Read this attribute
//  538     }
//  539   },
//  540   {
//  541     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  542     {  // Attribute record
//  543       ATTRID_DIAGNOSTIC_MAC_RX_BCAST,
//  544       ZCL_DATATYPE_UINT32,
//  545       ACCESS_CONTROL_READ,
//  546       NULL // Use application's callback to Read this attribute
//  547     }
//  548   },
//  549   {
//  550     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  551     {  // Attribute record
//  552       ATTRID_DIAGNOSTIC_MAC_TX_BCAST,
//  553       ZCL_DATATYPE_UINT32,
//  554       ACCESS_CONTROL_READ,
//  555       NULL // Use application's callback to Read this attribute
//  556     }
//  557   },
//  558   {
//  559     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  560     {  // Attribute record
//  561       ATTRID_DIAGNOSTIC_MAC_RX_UCAST,
//  562       ZCL_DATATYPE_UINT32,
//  563       ACCESS_CONTROL_READ,
//  564       NULL // Use application's callback to Read this attribute
//  565     }
//  566   },
//  567   {
//  568     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  569     {  // Attribute record
//  570       ATTRID_DIAGNOSTIC_MAC_TX_UCAST,
//  571       ZCL_DATATYPE_UINT32,
//  572       ACCESS_CONTROL_READ,
//  573       NULL // Use application's callback to Read this attribute
//  574     }
//  575   },
//  576   {
//  577     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  578     {  // Attribute record
//  579       ATTRID_DIAGNOSTIC_MAC_TX_UCAST_RETRY,
//  580       ZCL_DATATYPE_UINT16,
//  581       ACCESS_CONTROL_READ,
//  582       NULL // Use application's callback to Read this attribute
//  583     }
//  584   },
//  585   {
//  586     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  587     {  // Attribute record
//  588       ATTRID_DIAGNOSTIC_MAC_TX_UCAST_FAIL,
//  589       ZCL_DATATYPE_UINT16,
//  590       ACCESS_CONTROL_READ,
//  591       NULL // Use application's callback to Read this attribute
//  592     }
//  593   },
//  594   {
//  595     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  596     {  // Attribute record
//  597       ATTRID_DIAGNOSTIC_APS_RX_BCAST,
//  598       ZCL_DATATYPE_UINT16,
//  599       ACCESS_CONTROL_READ,
//  600       NULL // Use application's callback to Read this attribute
//  601     }
//  602   },
//  603   {
//  604     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  605     {  // Attribute record
//  606       ATTRID_DIAGNOSTIC_APS_TX_BCAST,
//  607       ZCL_DATATYPE_UINT16,
//  608       ACCESS_CONTROL_READ,
//  609       NULL // Use application's callback to Read this attribute
//  610     }
//  611   },
//  612   {
//  613     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  614     {  // Attribute record
//  615       ATTRID_DIAGNOSTIC_APS_RX_UCAST,
//  616       ZCL_DATATYPE_UINT16,
//  617       ACCESS_CONTROL_READ,
//  618       NULL // Use application's callback to Read this attribute
//  619     }
//  620   },
//  621   {
//  622     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  623     {  // Attribute record
//  624       ATTRID_DIAGNOSTIC_APS_TX_UCAST_SUCCESS,
//  625       ZCL_DATATYPE_UINT16,
//  626       ACCESS_CONTROL_READ,
//  627       NULL // Use application's callback to Read this attribute
//  628     }
//  629   },
//  630   {
//  631     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  632     {  // Attribute record
//  633       ATTRID_DIAGNOSTIC_APS_TX_UCAST_RETRY,
//  634       ZCL_DATATYPE_UINT16,
//  635       ACCESS_CONTROL_READ,
//  636       NULL // Use application's callback to Read this attribute
//  637     }
//  638   },
//  639   {
//  640     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  641     {  // Attribute record
//  642       ATTRID_DIAGNOSTIC_APS_TX_UCAST_FAIL,
//  643       ZCL_DATATYPE_UINT16,
//  644       ACCESS_CONTROL_READ,
//  645       NULL // Use application's callback to Read this attribute
//  646     }
//  647   },
//  648   {
//  649     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  650     {  // Attribute record
//  651       ATTRID_DIAGNOSTIC_ROUTE_DISC_INITIATED,
//  652       ZCL_DATATYPE_UINT16,
//  653       ACCESS_CONTROL_READ,
//  654       NULL // Use application's callback to Read this attribute
//  655     }
//  656   },
//  657   {
//  658     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  659     {  // Attribute record
//  660       ATTRID_DIAGNOSTIC_NEIGHBOR_ADDED,
//  661       ZCL_DATATYPE_UINT16,
//  662       ACCESS_CONTROL_READ,
//  663       NULL // Use application's callback to Read this attribute
//  664     }
//  665   },
//  666   {
//  667     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  668     {  // Attribute record
//  669       ATTRID_DIAGNOSTIC_NEIGHBOR_REMOVED,
//  670       ZCL_DATATYPE_UINT16,
//  671       ACCESS_CONTROL_READ,
//  672       NULL // Use application's callback to Read this attribute
//  673     }
//  674   },
//  675   {
//  676     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  677     {  // Attribute record
//  678       ATTRID_DIAGNOSTIC_NEIGHBOR_STALE,
//  679       ZCL_DATATYPE_UINT16,
//  680       ACCESS_CONTROL_READ,
//  681       NULL // Use application's callback to Read this attribute
//  682     }
//  683   },
//  684   {
//  685     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  686     {  // Attribute record
//  687       ATTRID_DIAGNOSTIC_JOIN_INDICATION,
//  688       ZCL_DATATYPE_UINT16,
//  689       ACCESS_CONTROL_READ,
//  690       NULL // Use application's callback to Read this attribute
//  691     }
//  692   },
//  693   {
//  694     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  695     {  // Attribute record
//  696       ATTRID_DIAGNOSTIC_CHILD_MOVED,
//  697       ZCL_DATATYPE_UINT16,
//  698       ACCESS_CONTROL_READ,
//  699       NULL // Use application's callback to Read this attribute
//  700     }
//  701   },
//  702   {
//  703     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  704     {  // Attribute record
//  705       ATTRID_DIAGNOSTIC_NWK_FC_FAILURE,
//  706       ZCL_DATATYPE_UINT16,
//  707       ACCESS_CONTROL_READ,
//  708       NULL // Use application's callback to Read this attribute
//  709     }
//  710   },
//  711   {
//  712     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  713     {  // Attribute record
//  714       ATTRID_DIAGNOSTIC_APS_FC_FAILURE,
//  715       ZCL_DATATYPE_UINT16,
//  716       ACCESS_CONTROL_READ,
//  717       NULL // Use application's callback to Read this attribute
//  718     }
//  719   },
//  720   {
//  721     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  722     {  // Attribute record
//  723       ATTRID_DIAGNOSTIC_APS_UNAUTHORIZED_KEY,
//  724       ZCL_DATATYPE_UINT16,
//  725       ACCESS_CONTROL_READ,
//  726       NULL // Use application's callback to Read this attribute
//  727     }
//  728   },
//  729   {
//  730     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  731     {  // Attribute record
//  732       ATTRID_DIAGNOSTIC_NWK_DECRYPT_FAILURES,
//  733       ZCL_DATATYPE_UINT16,
//  734       ACCESS_CONTROL_READ,
//  735       NULL // Use application's callback to Read this attribute
//  736     }
//  737   },
//  738   {
//  739     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  740     {  // Attribute record
//  741       ATTRID_DIAGNOSTIC_APS_DECRYPT_FAILURES,
//  742       ZCL_DATATYPE_UINT16,
//  743       ACCESS_CONTROL_READ,
//  744       NULL // Use application's callback to Read this attribute
//  745     }
//  746   },
//  747   {
//  748     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  749     {  // Attribute record
//  750       ATTRID_DIAGNOSTIC_PACKET_BUFFER_ALLOCATE_FAILURES,
//  751       ZCL_DATATYPE_UINT16,
//  752       ACCESS_CONTROL_READ,
//  753       NULL // Use application's callback to Read this attribute
//  754     }
//  755   },
//  756   {
//  757     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  758     {  // Attribute record
//  759       ATTRID_DIAGNOSTIC_RELAYED_UCAST,
//  760       ZCL_DATATYPE_UINT16,
//  761       ACCESS_CONTROL_READ,
//  762       NULL // Use application's callback to Read this attribute
//  763     }
//  764   },
//  765   {
//  766     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  767     {  // Attribute record
//  768       ATTRID_DIAGNOSTIC_PHY_TO_MAC_QUEUE_LIMIT_REACHED,
//  769       ZCL_DATATYPE_UINT16,
//  770       ACCESS_CONTROL_READ,
//  771       NULL // Use application's callback to Read this attribute
//  772     }
//  773   },
//  774   {
//  775     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  776     {  // Attribute record
//  777       ATTRID_DIAGNOSTIC_PACKET_VALIDATE_DROP_COUNT,
//  778       ZCL_DATATYPE_UINT16,
//  779       ACCESS_CONTROL_READ,
//  780       NULL // Use application's callback to Read this attribute
//  781     }
//  782   },
//  783   {
//  784     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  785     {  // Attribute record
//  786       ATTRID_DIAGNOSTIC_AVERAGE_MAC_RETRY_PER_APS_MESSAGE_SENT,
//  787       ZCL_DATATYPE_UINT16,
//  788       ACCESS_CONTROL_READ,
//  789       NULL // Use application's callback to Read this attribute
//  790     }
//  791   },
//  792   {
//  793     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  794     {  // Attribute record
//  795       ATTRID_DIAGNOSTIC_LAST_MESSAGE_LQI,
//  796       ZCL_DATATYPE_UINT8,
//  797       ACCESS_CONTROL_READ,
//  798       NULL // Use application's callback to Read this attribute
//  799     }
//  800   },
//  801   {
//  802     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  803     {  // Attribute record
//  804       ATTRID_DIAGNOSTIC_LAST_MESSAGE_RSSI,
//  805       ZCL_DATATYPE_INT8,
//  806       ACCESS_CONTROL_READ,
//  807       NULL // Use application's callback to Read this attribute
//  808     }
//  809   },
//  810   {
//  811     ZCL_CLUSTER_ID_HA_DIAGNOSTIC,
//  812     {  // Attribute record
//  813       ATTRID_CLUSTER_REVISION,
//  814       ZCL_DATATYPE_UINT16,
//  815       ACCESS_CONTROL_READ,
//  816       (void *)&zclSampleLight_clusterRevision_all
//  817     }
//  818   },
//  819 #endif // ZCL_DIAGNOSTIC
//  820 
//  821 
//  822 
//  823 };
//  824 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  825 uint8 CONST zclSampleLight_NumAttributes = ( sizeof(zclSampleLight_Attrs) / sizeof(zclSampleLight_Attrs[0]) );
zclSampleLight_NumAttributes:
        DB 29
//  826 
//  827 /*********************************************************************
//  828  * SIMPLE DESCRIPTOR
//  829  */
//  830 // This is the Cluster ID List and should be filled with Application
//  831 // specific cluster IDs.

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  832 const cId_t zclSampleLight_InClusterList[] =
zclSampleLight_InClusterList:
        DATA16
        DW 0
        DW 3
        DW 4
        DW 5
        DW 6
        DW 8
//  833 {
//  834   ZCL_CLUSTER_ID_GEN_BASIC,
//  835   ZCL_CLUSTER_ID_GEN_IDENTIFY,
//  836   ZCL_CLUSTER_ID_GEN_GROUPS,
//  837   ZCL_CLUSTER_ID_GEN_SCENES,
//  838   ZCL_CLUSTER_ID_GEN_ON_OFF
//  839 #ifdef ZCL_LEVEL_CTRL
//  840   , ZCL_CLUSTER_ID_GEN_LEVEL_CONTROL
//  841 #endif
//  842 };
//  843 
//  844 #define ZCLSAMPLELIGHT_MAX_INCLUSTERS   (sizeof(zclSampleLight_InClusterList) / sizeof(zclSampleLight_InClusterList[0]))
//  845  

        RSEG XDATA_I:XDATA:NOROOT(0)
//  846 SimpleDescriptionFormat_t zclSampleLight_SimpleDesc =
zclSampleLight_SimpleDesc:
        DATA8
        DS 12
        REQUIRE `?<Initializer for zclSampleLight_SimpleDesc>`
        REQUIRE __INIT_XDATA_I
//  847 {
//  848   SAMPLELIGHT_ENDPOINT,                  //  int Endpoint;
//  849   ZCL_HA_PROFILE_ID,                     //  uint16 AppProfId;
//  850 #ifdef ZCL_LEVEL_CTRL
//  851   ZCL_HA_DEVICEID_DIMMABLE_LIGHT,        //  uint16 AppDeviceId;
//  852 #else
//  853   ZCL_HA_DEVICEID_ON_OFF_LIGHT,          //  uint16 AppDeviceId;
//  854 #endif
//  855   SAMPLELIGHT_DEVICE_VERSION,            //  int   AppDevVer:4;
//  856   SAMPLELIGHT_FLAGS,                     //  int   AppFlags:4;
//  857   ZCLSAMPLELIGHT_MAX_INCLUSTERS,         //  byte  AppNumInClusters;
//  858   (cId_t *)zclSampleLight_InClusterList, //  byte *pAppInClusterList;
//  859   0,        //  byte  AppNumInClusters;
//  860   NULL //  byte *pAppInClusterList;
//  861 };
//  862 
//  863 // Added to include ZLL Target functionality 
//  864 #if defined ( BDB_TL_INITIATOR ) || defined ( BDB_TL_TARGET )
//  865 bdbTLDeviceInfo_t tlSampleLight_DeviceInfo =
//  866 {
//  867   SAMPLELIGHT_ENDPOINT,                  //uint8 endpoint;
//  868   ZCL_HA_PROFILE_ID,                        //uint16 profileID;
//  869 #ifdef ZCL_LEVEL_CTRL
//  870       ZCL_HA_DEVICEID_DIMMABLE_LIGHT,        //  uint16 AppDeviceId;
//  871 #else
//  872       ZCL_HA_DEVICEID_ON_OFF_LIGHT,          //  uint16 AppDeviceId;
//  873 #endif
//  874 
//  875   SAMPLELIGHT_DEVICE_VERSION,                    //uint8 version;
//  876   SAMPLELIGHT_NUM_GRPS                   //uint8 grpIdCnt;
//  877 };
//  878 #endif
//  879 /*********************************************************************
//  880  * GLOBAL FUNCTIONS
//  881  */
//  882 
//  883 /*********************************************************************
//  884  * LOCAL FUNCTIONS
//  885  */
//  886  
//  887 /*********************************************************************
//  888  * @fn      zclSampleLight_ResetAttributesToDefaultValues
//  889  *
//  890  * @brief   Reset all writable attributes to their default values.
//  891  *
//  892  * @param   none
//  893  *
//  894  * @return  none
//  895  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  896 void zclSampleLight_ResetAttributesToDefaultValues(void)
zclSampleLight_ResetAttributesToDefaultValues:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function zclSampleLight_ResetAttributesToDefaultValues
        CODE
//  897 {
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  898   int i;
//  899   
//  900   zclSampleLight_LocationDescription[0] = 16;
        MOV       DPTR,#zclSampleLight_LocationDescription
        MOV       A,#0x10
        MOVX      @DPTR,A
//  901   for (i = 1; i <= 16; i++)
//  902   {
//  903     zclSampleLight_LocationDescription[i] = ' ';
        MOV       A,#0x20
        INC       DPTR
        MOV       R0,#0x10
??zclSampleLight_ResetAttributesToDefaultValues_1:
        MOVX      @DPTR,A
        INC       DPTR
        DJNZ      R0,??zclSampleLight_ResetAttributesToDefaultValues_1
//  904   }
//  905   
//  906   zclSampleLight_PhysicalEnvironment = DEFAULT_PHYSICAL_ENVIRONMENT;
        MOV       DPTR,#zclSampleLight_PhysicalEnvironment
        CLR       A
        MOVX      @DPTR,A
//  907   zclSampleLight_DeviceEnable = DEFAULT_DEVICE_ENABLE_STATE;
        MOV       DPTR,#zclSampleLight_DeviceEnable
        INC       A
        MOVX      @DPTR,A
//  908   
//  909 #ifdef ZCL_IDENTIFY
//  910   zclSampleLight_IdentifyTime = DEFAULT_IDENTIFY_TIME;
        MOV       DPTR,#zclSampleLight_IdentifyTime
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  911 #endif
//  912 #ifdef ZCL_LEVEL_CTRL
//  913   zclSampleLight_LevelCurrentLevel = DEFAULT_LEVEL;
        MOV       DPTR,#zclSampleLight_LevelCurrentLevel
        MOV       A,#-0x2
        MOVX      @DPTR,A
//  914   zclSampleLight_LevelRemainingTime = 0;
        MOV       DPTR,#zclSampleLight_LevelRemainingTime
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  915   zclSampleLight_LevelOnOffTransitionTime = DEFAULT_ON_OFF_TRANSITION_TIME;
        MOV       DPTR,#zclSampleLight_LevelOnOffTransitionTime
        MOV       A,#0x14
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  916   zclSampleLight_LevelOnLevel = DEFAULT_ON_LEVEL;
        MOV       DPTR,#zclSampleLight_LevelOnLevel
        MOV       A,#-0x1
        MOVX      @DPTR,A
//  917   zclSampleLight_LevelOnTransitionTime = DEFAULT_ON_TRANSITION_TIME;
        MOV       DPTR,#zclSampleLight_LevelOnTransitionTime
        MOV       A,#0x14
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  918   zclSampleLight_LevelOffTransitionTime = DEFAULT_OFF_TRANSITION_TIME;
        MOV       DPTR,#zclSampleLight_LevelOffTransitionTime
        MOV       A,#0x14
        MOVX      @DPTR,A
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
//  919   zclSampleLight_LevelDefaultMoveRate = DEFAULT_MOVE_RATE;
        MOV       DPTR,#zclSampleLight_LevelDefaultMoveRate
        MOVX      @DPTR,A
//  920 #endif
//  921   zclSampleLight_OnOff = DEFAULT_ON_OFF_STATE;
        MOV       DPTR,#zclSampleLight_OnOff
        MOVX      @DPTR,A
//  922   
//  923   zclSampleLight_IdentifyTime = 0;
//  924   zclSampleLight_on = 0;
        MOV       DPTR,#zclSampleLight_on
        MOVX      @DPTR,A
//  925 }
        POP       DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP       DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP      ?BRET
          CFI EndBlock cfiBlock0

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zclSampleLight_SimpleDesc>`:
        DATA8
        DB 8
        DATA16
        DW 260
        DW 257
        DATA8
        DB 1
        DB 6
        DATA16
        DW zclSampleLight_InClusterList
        DATA8
        DB 0
        DATA16
        DW 0H

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??zclSampleLight_ResetAttributesToDefaultValues:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zclSampleLight_ResetAttributesToDefaultValues

        END
//  926 
//  927 /****************************************************************************
//  928 ****************************************************************************/
// 
// 101 bytes in segment BANKED_CODE
//   6 bytes in segment BANK_RELAYS
// 250 bytes in segment CODE_C
//  12 bytes in segment XDATA_I
//  12 bytes in segment XDATA_ID
//  52 bytes in segment XDATA_ROM_C
//  34 bytes in segment XDATA_Z
// 
// 268 bytes of CODE     memory
//  52 bytes of CONST    memory
// 101 bytes of HUGECODE memory
//  46 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
